{"ast":null,"code":"import { UPDATE_GAME } from \"../actions/actionGame\"; //生产者\n\nexport const reducerGame = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let nextState = JSON.parse(JSON.stringify(previousState));\n\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info !== null) {\n        break;\n      }\n\n      const newHistory = [...nextState.history, {\n        stepCount: nextState.stepCount,\n        player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n        position: action.data.position\n      }];\n      return nextState = {\n        history: newHistory,\n        stepCount: nextState.stepCount + 1,\n        squares: calcSquare(newHistory, nextState.stepCount + 1)\n      };\n\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: []\n};\n\nconst calcSquare = (history, stepCount) => {\n  let newSquare = new Array(9).fill(null);\n\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n\n  return newSquare;\n};","map":{"version":3,"names":["UPDATE_GAME","reducerGame","state","initData","action","nextState","JSON","parse","stringify","previousState","type","data","info","newHistory","history","stepCount","player","position","squares","calcSquare","Array","fill","newSquare","i","curHistory"],"sources":["/Users/strawberrypompey/myspace/react/game/frontend/src/redux/reducers/reducerGame.js"],"sourcesContent":["import { UPDATE_GAME } from \"../actions/actionGame\";\n//生产者\nexport const reducerGame = (state = initData, action) => {\n  let nextState = JSON.parse(JSON.stringify(previousState));\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info !== null) {\n        break;\n      }\n      const newHistory = [\n        ...nextState.history,\n        {\n          stepCount: nextState.stepCount,\n          player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n          position: action.data.position,\n        },\n      ];\n      return (nextState = {\n        history: newHistory,\n        stepCount: nextState.stepCount + 1,\n        squares: calcSquare(newHistory, nextState.stepCount + 1),\n      });\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: [],\n};\nconst calcSquare = (history, stepCount) => {\n  let newSquare = new Array(9).fill(null);\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n  return newSquare;\n};\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAG,YAA8B;EAAA,IAA7BC,KAA6B,uEAArBC,QAAqB;EAAA,IAAXC,MAAW;EACvD,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeC,aAAf,CAAX,CAAhB;;EACA,QAAQL,MAAM,CAACM,IAAf;IACE,KAAKV,WAAL;MACE,IAAII,MAAM,CAACO,IAAP,CAAYC,IAAZ,KAAqB,IAAzB,EAA+B;QAC7B;MACD;;MACD,MAAMC,UAAU,GAAG,CACjB,GAAGR,SAAS,CAACS,OADI,EAEjB;QACEC,SAAS,EAAEV,SAAS,CAACU,SADvB;QAEEC,MAAM,EAAEX,SAAS,CAACU,SAAV,GAAsB,CAAtB,KAA4B,CAA5B,GAAgC,GAAhC,GAAsC,GAFhD;QAGEE,QAAQ,EAAEb,MAAM,CAACO,IAAP,CAAYM;MAHxB,CAFiB,CAAnB;MAQA,OAAQZ,SAAS,GAAG;QAClBS,OAAO,EAAED,UADS;QAElBE,SAAS,EAAEV,SAAS,CAACU,SAAV,GAAsB,CAFf;QAGlBG,OAAO,EAAEC,UAAU,CAACN,UAAD,EAAaR,SAAS,CAACU,SAAV,GAAsB,CAAnC;MAHD,CAApB;;IAKF;MACE,OAAON,aAAP;EAnBJ;AAqBD,CAvBM;AAwBP,MAAMN,QAAQ,GAAG;EACf;EACAe,OAAO,EAAE,IAAIE,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAFM;EAGf;EACAN,SAAS,EAAE,CAJI;EAKf;EACAD,OAAO,EAAE;AANM,CAAjB;;AAQA,MAAMK,UAAU,GAAG,CAACL,OAAD,EAAUC,SAAV,KAAwB;EACzC,IAAIO,SAAS,GAAG,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAhB;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAApB,EAA+BQ,CAAC,EAAhC,EAAoC;IAClC,IAAIC,UAAU,GAAGV,OAAO,CAACS,CAAD,CAAxB;IACAD,SAAS,CAACE,UAAU,CAACP,QAAZ,CAAT,GAAiCO,UAAU,CAACR,MAA5C;EACD;;EACD,OAAOM,SAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}