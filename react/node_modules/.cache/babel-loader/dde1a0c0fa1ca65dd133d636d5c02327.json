{"ast":null,"code":"var _this = this;\n\nimport { UPDATE_GAME } from \"../actions/actionGame\"; //生产者\n\nexport const reducerGame = function () {\n  let previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let nextState = JSON.parse(JSON.stringify(previousState));\n\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info === null) {\n        const newHistory = [...nextState.history, {\n          stepCount: nextState.stepCount,\n          player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n          position: action.data.position\n        }];\n        ({\n          history: newHistory,\n          stepCount: _this.props.stepCount + 1,\n          squares: _this.calcSquare(newHistory, _this.props.stepCount + 1)\n        });\n      }\n\n      return nextState;\n\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: []\n};\n\nconst calcSquare = (history, stepCount) => {\n  const newSquare = new Array(9).fill(null);\n\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n\n  return newSquare;\n};","map":{"version":3,"names":["UPDATE_GAME","reducerGame","previousState","initData","action","nextState","JSON","parse","stringify","type","data","info","newHistory","history","stepCount","player","position","props","squares","calcSquare","Array","fill","newSquare","i","curHistory"],"sources":["/Users/strawberrypompey/myspace/react/game/frontend/src/redux/reducers/reducerGame.js"],"sourcesContent":["import { UPDATE_GAME } from \"../actions/actionGame\";\n//生产者\nexport const reducerGame = (previousState = initData, action) => {\n  let nextState = JSON.parse(JSON.stringify(previousState));\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info === null) {\n        const newHistory = [\n          ...nextState.history,\n          {\n            stepCount: nextState.stepCount,\n            player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n            position: action.data.position,\n          },\n        ];\n\n        ({\n          history: newHistory,\n          stepCount: this.props.stepCount + 1,\n          squares: this.calcSquare(newHistory, this.props.stepCount + 1),\n        });\n      }\n      return nextState;\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: [],\n};\nconst calcSquare = (history, stepCount) => {\n  const newSquare = new Array(9).fill(null);\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n  return newSquare;\n};\n"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,uBAA5B,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAG,YAAsC;EAAA,IAArCC,aAAqC,uEAArBC,QAAqB;EAAA,IAAXC,MAAW;EAC/D,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,aAAf,CAAX,CAAhB;;EACA,QAAQE,MAAM,CAACK,IAAf;IACE,KAAKT,WAAL;MACE,IAAII,MAAM,CAACM,IAAP,CAAYC,IAAZ,KAAqB,IAAzB,EAA+B;QAC7B,MAAMC,UAAU,GAAG,CACjB,GAAGP,SAAS,CAACQ,OADI,EAEjB;UACEC,SAAS,EAAET,SAAS,CAACS,SADvB;UAEEC,MAAM,EAAEV,SAAS,CAACS,SAAV,GAAsB,CAAtB,KAA4B,CAA5B,GAAgC,GAAhC,GAAsC,GAFhD;UAGEE,QAAQ,EAAEZ,MAAM,CAACM,IAAP,CAAYM;QAHxB,CAFiB,CAAnB;QASA,CAAC;UACCH,OAAO,EAAED,UADV;UAECE,SAAS,EAAE,KAAI,CAACG,KAAL,CAAWH,SAAX,GAAuB,CAFnC;UAGCI,OAAO,EAAE,KAAI,CAACC,UAAL,CAAgBP,UAAhB,EAA4B,KAAI,CAACK,KAAL,CAAWH,SAAX,GAAuB,CAAnD;QAHV,CAAD;MAKD;;MACD,OAAOT,SAAP;;IACF;MACE,OAAOH,aAAP;EApBJ;AAsBD,CAxBM;AAyBP,MAAMC,QAAQ,GAAG;EACf;EACAe,OAAO,EAAE,IAAIE,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAFM;EAGf;EACAP,SAAS,EAAE,CAJI;EAKf;EACAD,OAAO,EAAE;AANM,CAAjB;;AAQA,MAAMM,UAAU,GAAG,CAACN,OAAD,EAAUC,SAAV,KAAwB;EACzC,MAAMQ,SAAS,GAAG,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAlB;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAApB,EAA+BS,CAAC,EAAhC,EAAoC;IAClC,IAAIC,UAAU,GAAGX,OAAO,CAACU,CAAD,CAAxB;IACAD,SAAS,CAACE,UAAU,CAACR,QAAZ,CAAT,GAAiCQ,UAAU,CAACT,MAA5C;EACD;;EACD,OAAOO,SAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}