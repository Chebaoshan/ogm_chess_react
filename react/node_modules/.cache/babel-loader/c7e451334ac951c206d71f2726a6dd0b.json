{"ast":null,"code":"import { RESET_DATA, UPDATE_GAME } from \"../actions/actionGame\";\nimport { winner } from \"../../utils/winner\"; //生产者\n\nexport const reducerGame = function () {\n  let previousState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let nextState = JSON.parse(JSON.stringify(previousState));\n\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info !== null) {\n        return previousState;\n      }\n\n      const newHistory = [...nextState.history, {\n        stepCount: nextState.stepCount,\n        player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n        position: action.data.position\n      }];\n      return nextState = {\n        history: newHistory,\n        stepCount: nextState.stepCount + 1,\n        squares: calcSquare(newHistory, nextState.stepCount + 1),\n        result: winner()\n      };\n\n    case RESET_DATA:\n      return initData;\n\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: [],\n  //胜负已出\n  result: false\n};\n\nconst calcSquare = (history, stepCount) => {\n  let newSquare = new Array(9).fill(null);\n\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n\n  return newSquare;\n};","map":{"version":3,"names":["RESET_DATA","UPDATE_GAME","winner","reducerGame","previousState","initData","action","nextState","JSON","parse","stringify","type","data","info","newHistory","history","stepCount","player","position","squares","calcSquare","result","Array","fill","newSquare","i","curHistory"],"sources":["/Users/strawberrypompey/myspace/react/game/frontend/src/redux/reducers/reducerGame.js"],"sourcesContent":["import { RESET_DATA, UPDATE_GAME } from \"../actions/actionGame\";\nimport { winner } from \"../../utils/winner\";\n//生产者\nexport const reducerGame = (previousState = initData, action) => {\n  let nextState = JSON.parse(JSON.stringify(previousState));\n  switch (action.type) {\n    case UPDATE_GAME:\n      if (action.data.info !== null) {\n        return previousState;\n      }\n      const newHistory = [\n        ...nextState.history,\n        {\n          stepCount: nextState.stepCount,\n          player: nextState.stepCount % 2 === 0 ? \"X\" : \"O\",\n          position: action.data.position,\n        },\n      ];\n      return (nextState = {\n        history: newHistory,\n        stepCount: nextState.stepCount + 1,\n        squares: calcSquare(newHistory, nextState.stepCount + 1),\n        result: winner(),\n      });\n    case RESET_DATA:\n      return initData;\n    default:\n      return previousState;\n  }\n};\nconst initData = {\n  //棋盘上的棋子信息\n  squares: new Array(9).fill(null),\n  //步数\n  stepCount: 0,\n  //历史记录\n  history: [],\n  //胜负已出\n  result: false,\n};\nconst calcSquare = (history, stepCount) => {\n  let newSquare = new Array(9).fill(null);\n  for (let i = 0; i < stepCount; i++) {\n    let curHistory = history[i];\n    newSquare[curHistory.position] = curHistory.player;\n  }\n  return newSquare;\n};\n"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,WAArB,QAAwC,uBAAxC;AACA,SAASC,MAAT,QAAuB,oBAAvB,C,CACA;;AACA,OAAO,MAAMC,WAAW,GAAG,YAAsC;EAAA,IAArCC,aAAqC,uEAArBC,QAAqB;EAAA,IAAXC,MAAW;EAC/D,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,aAAf,CAAX,CAAhB;;EACA,QAAQE,MAAM,CAACK,IAAf;IACE,KAAKV,WAAL;MACE,IAAIK,MAAM,CAACM,IAAP,CAAYC,IAAZ,KAAqB,IAAzB,EAA+B;QAC7B,OAAOT,aAAP;MACD;;MACD,MAAMU,UAAU,GAAG,CACjB,GAAGP,SAAS,CAACQ,OADI,EAEjB;QACEC,SAAS,EAAET,SAAS,CAACS,SADvB;QAEEC,MAAM,EAAEV,SAAS,CAACS,SAAV,GAAsB,CAAtB,KAA4B,CAA5B,GAAgC,GAAhC,GAAsC,GAFhD;QAGEE,QAAQ,EAAEZ,MAAM,CAACM,IAAP,CAAYM;MAHxB,CAFiB,CAAnB;MAQA,OAAQX,SAAS,GAAG;QAClBQ,OAAO,EAAED,UADS;QAElBE,SAAS,EAAET,SAAS,CAACS,SAAV,GAAsB,CAFf;QAGlBG,OAAO,EAAEC,UAAU,CAACN,UAAD,EAAaP,SAAS,CAACS,SAAV,GAAsB,CAAnC,CAHD;QAIlBK,MAAM,EAAEnB,MAAM;MAJI,CAApB;;IAMF,KAAKF,UAAL;MACE,OAAOK,QAAP;;IACF;MACE,OAAOD,aAAP;EAtBJ;AAwBD,CA1BM;AA2BP,MAAMC,QAAQ,GAAG;EACf;EACAc,OAAO,EAAE,IAAIG,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAFM;EAGf;EACAP,SAAS,EAAE,CAJI;EAKf;EACAD,OAAO,EAAE,EANM;EAOf;EACAM,MAAM,EAAE;AARO,CAAjB;;AAUA,MAAMD,UAAU,GAAG,CAACL,OAAD,EAAUC,SAAV,KAAwB;EACzC,IAAIQ,SAAS,GAAG,IAAIF,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAhB;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAApB,EAA+BS,CAAC,EAAhC,EAAoC;IAClC,IAAIC,UAAU,GAAGX,OAAO,CAACU,CAAD,CAAxB;IACAD,SAAS,CAACE,UAAU,CAACR,QAAZ,CAAT,GAAiCQ,UAAU,CAACT,MAA5C;EACD;;EACD,OAAOO,SAAP;AACD,CAPD"},"metadata":{},"sourceType":"module"}